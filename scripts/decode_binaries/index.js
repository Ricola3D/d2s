/* eslint-disable no-console */
/* eslint-disable @typescript-eslint/no-var-requires */

const fs = require('fs');
const path = require('path');

const { writeOutput } = require('./utils.js');
const { decodeArmorFile } = require('./files/armor.js');
const { decodeCharStatsFile } = require('./files/charstats.js');
const { decodeGemsFile } = require('./files/gems.js');
const { decodeItemStatCostFile } = require('./files/itemstatcost.js');
const { decodeItemTypesFile } = require('./files/itemtypes.js');
const { decodeMagicAffixFile } = require('./files/magicaffix.js');
const { decodeMiscFile } = require('./files/misc.js');
const { decodePlayerClassFile } = require('./files/playerclass.js');
const { decodePropertiesFile } = require('./files/properties.js');
const { decodeRareAffixFile } = require('./files/rareaffix.js');
const { decodeRunesFile } = require('./files/runes.js');
const { decodeSetItemsFile } = require('./files/setitems.js');
const { decodeSkillDescFile } = require('./files/skilldesc.js');
const { decodeSkillsFile } = require('./files/skills.js');
const { decodeUniqueItemsFile } = require('./files/uniqueitems.js');
const { decodeWeaponsFile } = require('./files/weapons.js');

const inputDir = 'C:/Program Files (x86)/Diablo II Resurrected/mods/ReMoDDeD/ReMoDDeD.mpq/data/global/excel';
const outputDir = 'C:/Program Files (x86)/Diablo II Resurrected/mods/ReMoDDeD/ReMoDDeD.mpq/data/global/excel';

const data = {};
const columns = {};

// --------------------------------------------------
// --------------------------------------------------
// input
// --------------------------------------------------
// --------------------------------------------------
data.armor = decodeArmorFile(inputDir); // armor.bin
data.charstats = decodeCharStatsFile(inputDir); // charstats.bin
data.gems = decodeGemsFile(inputDir); // gems.bin
data.itemstatcost = decodeItemStatCostFile(inputDir); // itemstatcost.bin
data.itemtypes = decodeItemTypesFile(inputDir); // itemtypes.bin
data.magicprefix = decodeMagicAffixFile(inputDir, 'prefix'); // magicprefix.bin
data.magicsuffix = decodeMagicAffixFile(inputDir, 'suffix'); // magicsuffix.bin
data.misc = decodeMiscFile(inputDir); // misc.bin
data.playerclass = decodePlayerClassFile(inputDir); // playerclass.bin
data.properties = decodePropertiesFile(inputDir); // properties.bin
data.rareprefix = decodeRareAffixFile(inputDir, 'prefix'); // rareprefix.bin
data.raresuffix = decodeRareAffixFile(inputDir, 'suffix'); // raresuffix.bin
data.runes = decodeRunesFile(inputDir); // runes.bin
data.setitems = decodeSetItemsFile(inputDir); // setitems.bin
data.skilldesc = decodeSkillDescFile(inputDir); // skilldesc.bin
data.skills = decodeSkillsFile(inputDir); // skills.bin
data.uniqueitems = decodeUniqueItemsFile(inputDir); // uniqueitems.bin
data.weapons = decodeWeaponsFile(inputDir); // weapons.bin

// --------------------------------------------------
// --------------------------------------------------
// Links resolution
// --------------------------------------------------
// --------------------------------------------------

// --------------------------------------------------
// --------------------------------------------------
// output
// --------------------------------------------------
// --------------------------------------------------

console.log(`In dir "${outputDir}":`);

columns.armor = [
  'name',
  'version',
  'compactsave',
  'rarity',
  'spawnable',
  'minac',
  'maxac',
  'speed',
  'reqstr',
  'reqdex',
  'block',
  'durability',
  'nodurability',
  'level',
  'ShowLevel',
  'levelreq',
  'cost',
  'gamble cost',
  'code',
  'namestr',
  'magic lvl',
  'auto prefix',
  'alternategfx',
  'normcode',
  'ubercode',
  'ultracode',
  'component',
  'invwidth',
  'invheight',
  'hasinv',
  'gemsockets',
  'gemapplytype',
  'flippyfile',
  'invfile',
  'uniqueinvfile',
  'setinvfile',
  'rArm',
  'lArm',
  'Torso',
  'Legs',
  'rSPad',
  'lSPad',
  'useable',
  'stackable',
  'minstack',
  'maxstack',
  'spawnstack',
  'Transmogrify',
  'TMogType',
  'TMogMin',
  'TMogMax',
  'type',
  'type2',
  'dropsound',
  'dropsfxframe',
  'usesound',
  'unique',
  'transparent',
  'transtbl',
  '*quivered',
  'lightradius',
  'belt',
  'quest',
  'questdiffcheck',
  'missiletype',
  'durwarning',
  'qntwarning',
  'mindam',
  'maxdam',
  'StrBonus',
  'DexBonus',
  'gemoffset',
  'bitfield1',
  'CharsiMin',
  'CharsiMax',
  'CharsiMagicMin',
  'CharsiMagicMax',
  'CharsiMagicLvl',
  'GheedMin',
  'GheedMax',
  'GheedMagicMin',
  'GheedMagicMax',
  'GheedMagicLvl',
  'AkaraMin',
  'AkaraMax',
  'AkaraMagicMin',
  'AkaraMagicMax',
  'AkaraMagicLvl',
  'FaraMin',
  'FaraMax',
  'FaraMagicMin',
  'FaraMagicMax',
  'FaraMagicLvl',
  'LysanderMin',
  'LysanderMax',
  'LysanderMagicMin',
  'LysanderMagicMax',
  'LysanderMagicLvl',
  'DrognanMin',
  'DrognanMax',
  'DrognanMagicMin',
  'DrognanMagicMax',
  'DrognanMagicLvl',
  'HratliMin',
  'HratliMax',
  'HratliMagicMin',
  'HratliMagicMax',
  'HratliMagicLvl',
  'AlkorMin',
  'AlkorMax',
  'AlkorMagicMin',
  'AlkorMagicMax',
  'AlkorMagicLvl',
  'OrmusMin',
  'OrmusMax',
  'OrmusMagicMin',
  'OrmusMagicMax',
  'OrmusMagicLvl',
  'ElzixMin',
  'ElzixMax',
  'ElzixMagicMin',
  'ElzixMagicMax',
  'ElzixMagicLvl',
  'AshearaMin',
  'AshearaMax',
  'AshearaMagicMin',
  'AshearaMagicMax',
  'AshearaMagicLvl',
  'CainMin',
  'CainMax',
  'CainMagicMin',
  'CainMagicMax',
  'CainMagicLvl',
  'HalbuMin',
  'HalbuMax',
  'HalbuMagicMin',
  'HalbuMagicMax',
  'HalbuMagicLvl',
  'JamellaMin',
  'JamellaMax',
  'JamellaMagicMin',
  'JamellaMagicMax',
  'JamellaMagicLvl',
  'LarzukMin',
  'LarzukMax',
  'LarzukMagicMin',
  'LarzukMagicMax',
  'LarzukMagicLvl',
  'MalahMin',
  'MalahMax',
  'MalahMagicMin',
  'MalahMagicMax',
  'MalahMagicLvl',
  'AnyaMin',
  'AnyaMax',
  'AnyaMagicMin',
  'AnyaMagicMax',
  'AnyaMagicLvl',
  'Transform',
  'InvTrans',
  'SkipName',
  'NightmareUpgrade',
  'HellUpgrade',
  'Nameable',
  'PermStoreItem',
  'diablocloneweight',
];
writeOutput(outputDir, 'armor', data, columns);

columns.charstats = [
  'class',
  'str',
  'dext',
  'int',
  'vit',
  'stamina',
  'hpadd',
  'ManaRegen',
  'ToHitFactor',
  'WalkVelocity',
  'RunVelocity',
  'RunDrain',
  '*Comment',
  'LifePerLevel',
  'StaminaPerLevel',
  'ManaPerLevel',
  'LifePerVitality',
  'StaminaPerVitality',
  'ManaPerMagic',
  'StatPerLevel',
  'SkillsPerLevel',
  'LightRadius',
  'BlockFactor',
  'MinimumCastingDelay',
  'StartSkill',
  'Skill 1',
  'Skill 2',
  'Skill 3',
  'Skill 4',
  'Skill 5',
  'Skill 6',
  'Skill 7',
  'Skill 8',
  'Skill 9',
  'Skill 10',
  'StrAllSkills',
  'StrSkillTab1',
  'StrSkillTab2',
  'StrSkillTab3',
  'StrClassOnly',
  'HealthPotionPercent',
  'ManaPotionPercent',
  'baseWClass',
  'item1',
  'item1loc',
  'item1count',
  'item1quality',
  'item2',
  'item2loc',
  'item2count',
  'item2quality',
  'item3',
  'item3loc',
  'item3count',
  'item3quality',
  'item4',
  'item4loc',
  'item4count',
  'item4quality',
  'item5',
  'item5loc',
  'item5count',
  'item5quality',
  'item6',
  'item6loc',
  'item6count',
  'item6quality',
  'item7',
  'item7loc',
  'item7count',
  'item7quality',
  'item8',
  'item8loc',
  'item8count',
  'item8quality',
  'item9',
  'item9loc',
  'item9count',
  'item9quality',
  'item10',
  'item10loc',
  'item10count',
  'item10quality',
];
writeOutput(outputDir, 'charstats', data, columns);

columns.gems = [
  'name',
  'letter',
  'transform',
  'code',
  'weaponMod1Code',
  'weaponMod1Param',
  'weaponMod1Min',
  'weaponMod1Max',
  'weaponMod2Code',
  'weaponMod2Param',
  'weaponMod2Min',
  'weaponMod2Max',
  'weaponMod3Code',
  'weaponMod3Param',
  'weaponMod3Min',
  'weaponMod3Max',
  'helmMod1Code',
  'helmMod1Param',
  'helmMod1Min',
  'helmMod1Max',
  'helmMod2Code',
  'helmMod2Param',
  'helmMod2Min',
  'helmMod2Max',
  'helmMod3Code',
  'helmMod3Param',
  'helmMod3Min',
  'helmMod3Max',
  'shieldMod1Code',
  'shieldMod1Param',
  'shieldMod1Min',
  'shieldMod1Max',
  'shieldMod2Code',
  'shieldMod2Param',
  'shieldMod2Min',
  'shieldMod2Max',
  'shieldMod3Code',
  'shieldMod3Param',
  'shieldMod3Min',
  'shieldMod3Max',
];
writeOutput(outputDir, 'gems', data, columns);

columns.itemstatcost = [
  'Stat',
  '*ID',
  'Send Other',
  'Signed',
  'Send Bits',
  'Send Param Bits',
  'UpdateAnimRate',
  'Saved',
  'CSvSigned',
  'CSvBits',
  'CSvParam',
  'fCallback',
  'fMin',
  'MinAccr',
  'Encode',
  'Add',
  'Multiply',
  'ValShift',
  '1.09-Save Bits',
  '1.09-Save Add',
  'Save Bits',
  'Save Add',
  'Save Param Bits',
  'keepzero',
  'op',
  'op param',
  'op base',
  'op stat1',
  'op stat2',
  'op stat3',
  'direct',
  'maxstat',
  'damagerelated',
  'itemevent1',
  'itemeventfunc1',
  'itemevent2',
  'itemeventfunc2',
  'descpriority',
  'descfunc',
  'descval',
  'descstrpos',
  'descstrneg',
  'descstr2',
  'dgrp',
  'dgrpfunc',
  'dgrpval',
  'dgrpstrpos',
  'dgrpstrneg',
  'dgrpstr2',
  'stuff',
  'advdisplay',
  '*eol',
];
writeOutput(outputDir, 'itemstatcost', data, columns);

columns.itemtypes = [
  'ItemType',
  'Code',
  'Equiv1',
  'Equiv2',
  'Repair',
  'Body',
  'BodyLoc1',
  'BodyLoc2',
  'Shoots',
  'Quiver',
  'Throwable',
  'Reload',
  'ReEquip',
  'AutoStack',
  'Magic',
  'Rare',
  'Normal',
  'Beltable',
  'MaxSockets1',
  'MaxSocketsLevelThreshold1',
  'MaxSockets2',
  'MaxSocketsLevelThreshold2',
  'MaxSockets3',
  'TreasureClass',
  'Rarity',
  'StaffMods',
  'Class',
  'VarInvGfx',
  'InvGfx1',
  'InvGfx2',
  'InvGfx3',
  'InvGfx4',
  'InvGfx5',
  'InvGfx6',
  'StorePage',
  '*eol',
];
writeOutput(outputDir, 'itemtypes', data, columns);

columns.magicprefix = [
  'Name',
  'version',
  'spawnable',
  'rare',
  'level',
  'maxlevel',
  'levelreq',
  'classspecific',
  'class',
  'classlevelreq',
  'frequency',
  'group',
  'mod1code',
  'mod1param',
  'mod1min',
  'mod1max',
  'mod2code',
  'mod2param',
  'mod2min',
  'mod2max',
  'mod3code',
  'mod3param',
  'mod3min',
  'mod3max',
  'transformcolor',
  'itype1',
  'itype2',
  'itype3',
  'itype4',
  'itype5',
  'itype6',
  'itype7',
  'etype1',
  'etype2',
  'etype3',
  'etype4',
  'etype5',
  'multiply',
  'add',
];
columns.magicsuffix = columns.magicprefix;
writeOutput(outputDir, 'magicprefix', data, columns);
writeOutput(outputDir, 'magicsuffix', data, columns);

const magicPrefixListFile = path.join(outputDir, 'magicPrefixListFile.json');
fs.writeFileSync(
  magicPrefixListFile,
  JSON.stringify([null, ...data.magicprefix.map((item, index) => ({ id: index + 1, n: item.Name }))], null, '\t'),
);
const magicSuffixListFile = path.join(outputDir, 'magicSuffixListFile.json');
fs.writeFileSync(
  magicSuffixListFile,
  JSON.stringify([null, ...data.magicsuffix.map((item, index) => ({ id: index + 1, n: item.Name }))], null, '\t'),
);

columns.misc = [
  'name',
  'compactsave',
  'version',
  'level',
  'ShowLevel',
  'levelreq',
  'reqstr',
  'reqdex',
  'rarity',
  'spawnable',
  'speed',
  'nodurability',
  'cost',
  'gamble cost',
  'code',
  'alternategfx',
  'namestr',
  'component',
  'invwidth',
  'invheight',
  'hasinv',
  'gemsockets',
  'gemapplytype',
  'flippyfile',
  'invfile',
  'uniqueinvfile',
  'Transmogrify',
  'TMogType',
  'TMogMin',
  'TMogMax',
  'useable',
  'type',
  'type2',
  'dropsound',
  'dropsfxframe',
  'usesound',
  'unique',
  'transparent',
  'transtbl',
  'lightradius',
  'belt',
  'autobelt',
  'stackable',
  'minstack',
  'maxstack',
  'spawnstack',
  'quest',
  'questdiffcheck',
  'missiletype',
  'spellicon',
  'pSpell',
  'state',
  'cstate1',
  'cstate2',
  'len',
  'stat1',
  'calc1',
  'stat2',
  'calc2',
  'stat3',
  'calc3',
  'spelldesc',
  'spelldescstr',
  'spelldescstr2',
  'spelldesccalc',
  'spelldesccolor',
  'durwarning',
  'qntwarning',
  'gemoffset',
  'BetterGem',
  'bitfield1',
  'CharsiMin',
  'CharsiMax',
  'CharsiMagicMin',
  'CharsiMagicMax',
  'CharsiMagicLvl',
  'GheedMin',
  'GheedMax',
  'GheedMagicMin',
  'GheedMagicMax',
  'GheedMagicLvl',
  'AkaraMin',
  'AkaraMax',
  'AkaraMagicMin',
  'AkaraMagicMax',
  'AkaraMagicLvl',
  'FaraMin',
  'FaraMax',
  'FaraMagicMin',
  'FaraMagicMax',
  'FaraMagicLvl',
  'LysanderMin',
  'LysanderMax',
  'LysanderMagicMin',
  'LysanderMagicMax',
  'LysanderMagicLvl',
  'DrognanMin',
  'DrognanMax',
  'DrognanMagicMin',
  'DrognanMagicMax',
  'DrognanMagicLvl',
  'HratliMin',
  'HratliMax',
  'HratliMagicMin',
  'HratliMagicMax',
  'HratliMagicLvl',
  'AlkorMin',
  'AlkorMax',
  'AlkorMagicMin',
  'AlkorMagicMax',
  'AlkorMagicLvl',
  'OrmusMin',
  'OrmusMax',
  'OrmusMagicMin',
  'OrmusMagicMax',
  'OrmusMagicLvl',
  'ElzixMin',
  'ElzixMax',
  'ElzixMagicMin',
  'ElzixMagicMax',
  'ElzixMagicLvl',
  'AshearaMin',
  'AshearaMax',
  'AshearaMagicMin',
  'AshearaMagicMax',
  'AshearaMagicLvl',
  'CainMin',
  'CainMax',
  'CainMagicMin',
  'CainMagicMax',
  'CainMagicLvl',
  'HalbuMin',
  'HalbuMax',
  'HalbuMagicMin',
  'HalbuMagicMax',
  'HalbuMagicLvl',
  'MalahMin',
  'MalahMax',
  'MalahMagicMin',
  'MalahMagicMax',
  'MalahMagicLvl',
  'LarzukMin',
  'LarzukMax',
  'LarzukMagicMin',
  'LarzukMagicMax',
  'LarzukMagicLvl',
  'AnyaMin',
  'AnyaMax',
  'AnyaMagicMin',
  'AnyaMagicMax',
  'AnyaMagicLvl',
  'JamellaMin',
  'JamellaMax',
  'JamellaMagicMin',
  'JamellaMagicMax',
  'JamellaMagicLvl',
  'Transform',
  'InvTrans',
  'SkipName',
  'NightmareUpgrade',
  'HellUpgrade',
  'mindam',
  'maxdam',
  'PermStoreItem',
  'multibuy',
  'Nameable',
  'diablocloneweight',
];
writeOutput(outputDir, 'misc', data, columns);

columns.playerclass = ['Player Class', 'Code'];
writeOutput(outputDir, 'playerclass', data, columns);

columns.properties = [
  'code',
  '*Enabled',
  'func1',
  'stat1',
  'set1',
  'val1',
  'func2',
  'stat2',
  'set2',
  'val2',
  'func3',
  'stat3',
  'set3',
  'val3',
  'func4',
  'stat4',
  'set4',
  'val4',
  'func5',
  'stat5',
  'set5',
  'val5',
  'func6',
  'stat6',
  'set6',
  'val6',
  'func7',
  'stat7',
  'set7',
  'val7',
  '*Tooltip',
  '*Parameter',
  '*Min',
  '*Max',
  '*Notes',
  '*eol',
];
writeOutput(outputDir, 'properties', data, columns);

columns.rareprefix = [
  'name',
  'version',
  'itype1',
  'itype2',
  'itype3',
  'itype4',
  'itype5',
  'itype6',
  'itype7',
  'etype1',
  'etype2',
  'etype3',
  'etype4',
];
columns.raresuffix = columns.rareprefix;
writeOutput(outputDir, 'rareprefix', data, columns);
writeOutput(outputDir, 'raresuffix', data, columns);

columns.runes = [
  'Name',
  '*Rune Name',
  'complete',
  'firstLadderSeason',
  'lastLadderSeason',
  '*Patch Release',
  'itype1',
  'itype2',
  'itype3',
  'itype4',
  'itype5',
  'itype6',
  'etype1',
  'etype2',
  'etype3',
  '*RunesUsed',
  'Rune1',
  'Rune2',
  'Rune3',
  'Rune4',
  'Rune5',
  'Rune6',
  'T1Code1',
  'T1Param1',
  'T1Min1',
  'T1Max1',
  'T1Code2',
  'T1Param2',
  'T1Min2',
  'T1Max2',
  'T1Code3',
  'T1Param3',
  'T1Min3',
  'T1Max3',
  'T1Code4',
  'T1Param4',
  'T1Min4',
  'T1Max4',
  'T1Code5',
  'T1Param5',
  'T1Min5',
  'T1Max5',
  'T1Code6',
  'T1Param6',
  'T1Min6',
  'T1Max6',
  'T1Code7',
  'T1Param7',
  'T1Min7',
  'T1Max7',
  '*eol',
];
writeOutput(outputDir, 'runes', data, columns);

columns.setitems = [
  'index',
  '*ID',
  'set',
  'item',
  '*ItemName',
  'rarity',
  'lvl',
  'lvl req',
  'chrtransform',
  'invtransform',
  'invfile',
  'flippyfile',
  'dropsound',
  'dropsfxframe',
  'usesound',
  'cost mult',
  'cost add',
  'add func',
  'prop1',
  'par1',
  'min1',
  'max1',
  'prop2',
  'par2',
  'min2',
  'max2',
  'prop3',
  'par3',
  'min3',
  'max3',
  'prop4',
  'par4',
  'min4',
  'max4',
  'prop5',
  'par5',
  'min5',
  'max5',
  'prop6',
  'par6',
  'min6',
  'max6',
  'prop7',
  'par7',
  'min7',
  'max7',
  'prop8',
  'par8',
  'min8',
  'max8',
  'prop9',
  'par9',
  'min9',
  'max9',
  'aprop1a',
  'apar1a',
  'amin1a',
  'amax1a',
  'aprop1b',
  'apar1b',
  'amin1b',
  'amax1b',
  'aprop2a',
  'apar2a',
  'amin2a',
  'amax2a',
  'aprop2b',
  'apar2b',
  'amin2b',
  'amax2b',
  'aprop3a',
  'apar3a',
  'amin3a',
  'amax3a',
  'aprop3b',
  'apar3b',
  'amin3b',
  'amax3b',
  'aprop4a',
  'apar4a',
  'amin4a',
  'amax4a',
  'aprop4b',
  'apar4b',
  'amin4b',
  'amax4b',
  'aprop5a',
  'apar5a',
  'amin5a',
  'amax5a',
  'aprop5b',
  'apar5b',
  'amin5b',
  'amax5b',
  'diablocloneweight',
  '*eol',
];
writeOutput(outputDir, 'setitems', data, columns);

columns.skilldesc = [
  'skilldesc',
  'SkillPage',
  'SkillRow',
  'SkillColumn',
  'ListRow',
  'IconCel',
  'HireableIconCel',
  'str name',
  'str short',
  'str long',
  'str alt',
  'descdam',
  'ddam calc1',
  'ddam calc2',
  'p1dmelem',
  'p1dmmin',
  'p1dmmax',
  'p2dmelem',
  'p2dmmin',
  'p2dmmax',
  'p3dmelem',
  'p3dmmin',
  'p3dmmax',
  'descatt',
  'descmissile1',
  'descmissile2',
  'descmissile3',
  'descline1',
  'desctexta1',
  'desctextb1',
  'desccalca1',
  'desccalcb1',
  'descline2',
  'desctexta2',
  'desctextb2',
  'desccalca2',
  'desccalcb2',
  'descline3',
  'desctexta3',
  'desctextb3',
  'desccalca3',
  'desccalcb3',
  'descline4',
  'desctexta4',
  'desctextb4',
  'desccalca4',
  'desccalcb4',
  'descline5',
  'desctexta5',
  'desctextb5',
  'desccalca5',
  'desccalcb5',
  'descline6',
  'desctexta6',
  'desctextb6',
  'desccalca6',
  'desccalcb6',
  'dsc2line1',
  'dsc2texta1',
  'dsc2textb1',
  'dsc2calca1',
  'dsc2calcb1',
  'dsc2line2',
  'dsc2texta2',
  'dsc2textb2',
  'dsc2calca2',
  'dsc2calcb2',
  'dsc2line3',
  'dsc2texta3',
  'dsc2textb3',
  'dsc2calca3',
  'dsc2calcb3',
  'dsc2line4',
  'dsc2texta4',
  'dsc2textb4',
  'dsc2calca4',
  'dsc2calcb4',
  'dsc2line5',
  'dsc2texta5',
  'dsc2textb5',
  'dsc2calca5',
  'dsc2calcb5',
  'dsc3line1',
  'dsc3texta1',
  'dsc3textb1',
  'dsc3calca1',
  'dsc3calcb1',
  'dsc3line2',
  'dsc3texta2',
  'dsc3textb2',
  'dsc3calca2',
  'dsc3calcb2',
  'dsc3line3',
  'dsc3texta3',
  'dsc3textb3',
  'dsc3calca3',
  'dsc3calcb3',
  'dsc3line4',
  'dsc3texta4',
  'dsc3textb4',
  'dsc3calca4',
  'dsc3calcb4',
  'dsc3line5',
  'dsc3texta5',
  'dsc3textb5',
  'dsc3calca5',
  'dsc3calcb5',
  'dsc3line6',
  'dsc3texta6',
  'dsc3textb6',
  'dsc3calca6',
  'dsc3calcb6',
  'dsc3line7',
  'dsc3texta7',
  'dsc3textb7',
  'dsc3calca7',
  'dsc3calcb7',
  'item proc text',
  'item proc descline count',
  '*eol',
];
writeOutput(outputDir, 'skilldesc', data, columns);

columns.skills = [
  'skill',
  '*Id',
  'charclass',
  'skilldesc',
  'srvstfunc',
  'srvdofunc',
  'srvstopfunc',
  'prgstack',
  'srvprgfunc1',
  'srvprgfunc2',
  'srvprgfunc3',
  'prgcalc1',
  'prgcalc2',
  'prgcalc3',
  'prgdam',
  'srvmissile',
  'decquant',
  'lob',
  'srvmissilea',
  'srvmissileb',
  'srvmissilec',
  'useServerMissilesOnRemoteClients',
  'srvoverlay',
  'aurafilter',
  'aurastate',
  'auratargetstate',
  'auralencalc',
  'aurarangecalc',
  'aurastat1',
  'aurastatcalc1',
  'aurastat2',
  'aurastatcalc2',
  'aurastat3',
  'aurastatcalc3',
  'aurastat4',
  'aurastatcalc4',
  'aurastat5',
  'aurastatcalc5',
  'aurastat6',
  'aurastatcalc6',
  'auraevent1',
  'auraeventfunc1',
  'auraevent2',
  'auraeventfunc2',
  'auraevent3',
  'auraeventfunc3',
  'passivestate',
  'passiveitype',
  'passivereqweaponcount',
  'passivestat1',
  'passivecalc1',
  'passivestat2',
  'passivecalc2',
  'passivestat3',
  'passivecalc3',
  'passivestat4',
  'passivecalc4',
  'passivestat5',
  'passivecalc5',
  'passivestat6',
  'passivecalc6',
  'passivestat7',
  'passivecalc7',
  'passivestat8',
  'passivecalc8',
  'passivestat9',
  'passivecalc9',
  'passivestat10',
  'passivecalc10',
  'passivestat11',
  'passivecalc11',
  'passivestat12',
  'passivecalc12',
  'passivestat13',
  'passivecalc13',
  'passivestat14',
  'passivecalc14',
  'summon',
  'pettype',
  'petmax',
  'summode',
  'sumskill1',
  'sumsk1calc',
  'sumskill2',
  'sumsk2calc',
  'sumskill3',
  'sumsk3calc',
  'sumskill4',
  'sumsk4calc',
  'sumskill5',
  'sumsk5calc',
  'sumumod',
  'sumoverlay',
  'stsuccessonly',
  'stsound',
  'stsoundclass',
  'stsounddelay',
  'weaponsnd',
  'dosound',
  'dosound a',
  'dosound b',
  'tgtoverlay',
  'tgtsound',
  'prgoverlay',
  'prgsound',
  'castoverlay',
  'cltoverlaya',
  'cltoverlayb',
  'cltstfunc',
  'cltdofunc',
  'cltstopfunc',
  'cltprgfunc1',
  'cltprgfunc2',
  'cltprgfunc3',
  'cltmissile',
  'cltmissilea',
  'cltmissileb',
  'cltmissilec',
  'cltmissiled',
  'cltcalc1',
  '*cltcalc1 desc',
  'cltcalc2',
  '*cltcalc2 desc',
  'cltcalc3',
  '*cltcalc3 desc',
  'warp',
  'immediate',
  'enhanceable',
  'attackrank',
  'noammo',
  'range',
  'weapsel',
  'itypea1',
  'itypea2',
  'itypea3',
  'etypea1',
  'etypea2',
  'itypeb1',
  'itypeb2',
  'itypeb3',
  'etypeb1',
  'etypeb2',
  'anim',
  'seqtrans',
  'monanim',
  'seqnum',
  'seqinput',
  'durability',
  'UseAttackRate',
  'LineOfSight',
  'TargetableOnly',
  'SearchEnemyXY',
  'SearchEnemyNear',
  'SearchOpenXY',
  'SelectProc',
  'TargetCorpse',
  'TargetPet',
  'TargetAlly',
  'TargetItem',
  'AttackNoMana',
  'TgtPlaceCheck',
  'KeepCursorStateOnKill',
  'ContinueCastUnselected',
  'ClearSelectedOnHold',
  'ItemEffect',
  'ItemCltEffect',
  'ItemTgtDo',
  'ItemTarget',
  'ItemUseRestrict',
  'ItemCheckStart',
  'ItemCltCheckStart',
  'ItemCastSound',
  'ItemCastOverlay',
  'skpoints',
  'reqlevel',
  'maxlvl',
  'reqstr',
  'reqdex',
  'reqint',
  'reqvit',
  'reqskill1',
  'reqskill2',
  'reqskill3',
  'restrict',
  'State1',
  'State2',
  'State3',
  'localdelay',
  'globaldelay',
  'leftskill',
  'rightskill',
  'repeat',
  'alwayshit',
  'usemanaondo',
  'startmana',
  'minmana',
  'manashift',
  'mana',
  'lvlmana',
  'interrupt',
  'InTown',
  'aura',
  'periodic',
  'perdelay',
  'finishing',
  'prgchargestocast',
  'prgchargesconsumed',
  'passive',
  'progressive',
  'scroll',
  'calc1',
  '*calc1 desc',
  'calc2',
  '*calc2 desc',
  'calc3',
  '*calc3 desc',
  'calc4',
  '*calc4 desc',
  'calc5',
  '*calc5 desc',
  'calc6',
  '*calc6 desc',
  'Param1',
  '*Param1 Description',
  'Param2',
  '*Param2 Description',
  'Param3',
  '*Param3 Description',
  'Param4',
  '*Param4 Description',
  'Param5',
  '*Param5 Description',
  'Param6',
  '*Param6 Description',
  'Param7',
  '*Param7 Description',
  'Param8',
  '*Param8 Description',
  'Param9',
  '*Param9 Description',
  'Param10',
  '*Param10 Description2',
  'Param11',
  '*Param11 Description',
  'Param12',
  '*Param12 Description',
  'InGame',
  'ToHit',
  'LevToHit',
  'ToHitCalc',
  'ResultFlags',
  'HitFlags',
  'HitClass',
  'Kick',
  'HitShift',
  'SrcDam',
  'MinDam',
  'MinLevDam1',
  'MinLevDam2',
  'MinLevDam3',
  'MinLevDam4',
  'MinLevDam5',
  'MaxDam',
  'MaxLevDam1',
  'MaxLevDam2',
  'MaxLevDam3',
  'MaxLevDam4',
  'MaxLevDam5',
  'DmgSymPerCalc',
  'EType',
  'EMin',
  'EMinLev1',
  'EMinLev2',
  'EMinLev3',
  'EMinLev4',
  'EMinLev5',
  'EMax',
  'EMaxLev1',
  'EMaxLev2',
  'EMaxLev3',
  'EMaxLev4',
  'EMaxLev5',
  'EDmgSymPerCalc',
  'ELen',
  'ELevLen1',
  'ELevLen2',
  'ELevLen3',
  'ELenSymPerCalc',
  'aitype',
  'aibonus',
  'cost mult',
  'cost add',
  '*eol',
];
writeOutput(outputDir, 'skills', data, columns);
